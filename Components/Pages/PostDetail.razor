@page "/post/{PostId:int}"
@using Microsoft.EntityFrameworkCore
@using Blazor_Board.Data
@using Blazor_Board.Models
@using Blazor_Board.Services
@inject IDbContextFactory<ApplicationDbContext> DbFactory

@inject IJSRuntime JSRuntime
@inject UserSession UserSession


@if (post == null)
{
    <p>
        <em>
            ポストが見つかりません...
        </em>
    </p>
}
else
{
    <div class="p-4 sm:p-6 lg:p-8 bg-white rounded-lg shadow-md">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">@post.Title</h1>
        @if (UserSession.IsLoggedIn && (UserSession.CurrentUser.Id == post.UserId || UserSession.CurrentUser.Role == "Admin"))
        {
        <div class="flex justify-end my-4">
            <a href="@($"/post/edit/{post.Id}")" class="text-white bg-green-600 hover:bg-green-700 font-medium rounded-lg text-sm px-5 py-2.5">
                修正
            </a>
            <button @onclick="DeletePost" class="text-white bg-red-600 hover:bg-red-700 font-medium rounded-lg text-sm px-5 py-2.5">
                削除
            </button>
        </div>
        }
        <div class="flex items-center text-sm text-gray-500 mb-6">
            <span>作成者: @post.Author</span>
            <span class="mx-2">|</span>
            <span>作成日: @post.CreatedAt.ToString("yyyy-MM-dd HH:mm")</span>
        </div>
        <hr class="mb-6">
        <div class="text-gray-700 leading-relaxed">
            @((MarkupString)post.Content.Replace("\n", "<br/>"))
        </div>
    </div>
}


@code {
    [Parameter]
    public int PostId { get; set; }

    private Post? post;


    [Inject]
    private NavigationManager Navigation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        post = await context.Posts.FindAsync(PostId);
    }

    private async Task DeletePost()
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "このポストを削除しますか？");
        using var context = DbFactory.CreateDbContext();

        if (confirmed)
        {
            var postToDelete = await context.Posts.FindAsync(PostId);
            if (postToDelete != null)
            {
                context.Posts.Remove(postToDelete);
                await context.SaveChangesAsync();
                Navigation.NavigateTo("/board");
            }
        }
    }
}