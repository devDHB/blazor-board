@page "/login"
@using Microsoft.EntityFrameworkCore
@using Blazor_Board.Data
@using Blazor_Board.Models
@using Blazor_Board.Services;
@inject IDbContextFactory<ApplicationDbContext> DbFactory

@inject NavigationManager Navigation
@inject UserSession UserSession;

<PageTitle>ログイン</PageTitle>

<div class="max-w-md mx-auto mt-10">
    <div class="bg-white p-8 rounded-lg shadow-md">
        <h3 class="text-2xl font-bold mb-6 text-center">ログイン</h3>

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                    <span class="block sm:inline">@errorMessage</span>
                </div>
            }

            <div class="mb-4">
                <label for="username" class="block mb-2 text-sm font-medium text-gray-900">ID</label>
                <InputText id="username" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5" @bind-Value="loginModel.Username" />
            </div>
            <div class="mb-6">
                <label for="password" class="block mb-2 text-sm font-medium text-gray-900">パスワード</label>
                <InputText id="password" type="password" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5" @bind-Value="loginModel.Password" />
            </div>

            <button type="submit" class="w-full text-white bg-blue-700 hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
                ログイン
            </button>
        </EditForm>
    </div>
</div>

@code {
    // ログインフォーム専用モデルクラス
    public class LoginModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }

    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        // DBからIDでユーザーを探す
        using var context = DbFactory.CreateDbContext();
        var user = await context.Users
            .FirstOrDefaultAsync(u => u.Username == loginModel.Username);

        // ユーザーがいて、パスワードが一致していることを確認
        if (user != null && user.Password == loginModel.Password)
        {
            // ログイン成功
            await UserSession.Login(user); // セッションサービスにユーザー情報を保存
            Navigation.NavigateTo("/");
        }
        else
        {
            // ログイン失敗
            errorMessage = "ID 又は パスワードが正しくないです。";
        }
    }
}